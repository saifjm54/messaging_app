{"ast":null,"code":"var _jsxFileName = \"/home/saif/Documents/ISSAT23/springBootProject/messaging_app/frontend/src/components/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  userId\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [msg, setMsg] = useState('');\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket(`ws://localhost:8080/ws/chat?userId=${userId}`);\n    ws.onmessage = event => {\n      setLogs(prev => [...prev, `ðŸ“¥ ${event.data}`]);\n    };\n    setSocket(ws);\n    return () => ws.close();\n  }, [userId]);\n  const sendMessage = () => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const payload = {\n        to: 'bob',\n        message: msg\n      };\n      socket.send(JSON.stringify(payload));\n      setLogs(prev => [...prev, `ðŸ“¤ ${msg}`]);\n      setMsg('');\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Chat as \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: msg,\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBox, \"wFSG/vje/P2BHBBxdl//mhQlXQk=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ChatBox","userId","_s","socket","setSocket","msg","setMsg","logs","setLogs","ws","WebSocket","onmessage","event","prev","data","close","sendMessage","readyState","OPEN","payload","to","message","send","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/saif/Documents/ISSAT23/springBootProject/messaging_app/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ChatBox = ({ userId }) => {\n\n\n    const [socket, setSocket] = useState(null);\n    const [msg,setMsg] = useState('');\n    const [logs, setLogs] = useState([]);\n\n    useEffect(() => {\n        const ws = new WebSocket(`ws://localhost:8080/ws/chat?userId=${userId}`);\n        ws.onmessage = (event) => {\n            setLogs(prev => [...prev, `ðŸ“¥ ${event.data}`])\n        };\n        setSocket(ws);\n\n        return () => ws.close();\n    }, [userId]);\n\n    const sendMessage = () => {\n        if (socket && socket.readyState === WebSocket.OPEN){\n                 const payload = {\n                    to: 'bob',\n                    message: msg,\n                 };\n                \n                socket.send(JSON.stringify(payload));\n                setLogs(prev => [...prev, `ðŸ“¤ ${msg}`])\n                setMsg('');\n        };\n    };\n\n    return(\n        <div>\n            <h3>Chat as {userId}</h3>\n            <div>\n                <input value={msg} onChange={(e) => setMsg(e.target.value)} />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default ChatBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAG5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,GAAG,EAACC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMa,EAAE,GAAG,IAAIC,SAAS,CAAC,sCAAsCT,MAAM,EAAE,CAAC;IACxEQ,EAAE,CAACE,SAAS,GAAIC,KAAK,IAAK;MACtBJ,OAAO,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,MAAMD,KAAK,CAACE,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IACDV,SAAS,CAACK,EAAE,CAAC;IAEb,OAAO,MAAMA,EAAE,CAACM,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIb,MAAM,IAAIA,MAAM,CAACc,UAAU,KAAKP,SAAS,CAACQ,IAAI,EAAC;MAC1C,MAAMC,OAAO,GAAG;QACbC,EAAE,EAAE,KAAK;QACTC,OAAO,EAAEhB;MACZ,CAAC;MAEFF,MAAM,CAACmB,IAAI,CAACC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC;MACpCX,OAAO,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,MAAMR,GAAG,EAAE,CAAC,CAAC;MACvCC,MAAM,CAAC,EAAE,CAAC;IAClB;IAAC;EACL,CAAC;EAED,oBACIP,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,GAAI,UAAQ,EAACxB,MAAM;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzB9B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAO+B,KAAK,EAAEzB,GAAI;QAAC0B,QAAQ,EAAGC,CAAC,IAAK1B,MAAM,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9D9B,OAAA;QAAQmC,OAAO,EAAElB,WAAY;QAAAS,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAxCIF,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}